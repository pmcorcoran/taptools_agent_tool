{"/address/info":{"description" : "Get address payment credential and stake address, along with its current aggregate lovelace and multi asset balance. Either `address` or `paymentCred` can be provided, but one must be provided.", "parameters" : [{"description": "Address to query for", "in": "query", "name": "address", "required": false, "schema": {"example": "addr1q9j5jqhqak5nmqphdqt4cj9kq0gppa49afyznggw03hjzhwxr0exydkt78th5wwrjphxh0h6rrgghzwxse6q3pdf9sxqkg2mmq", "type": "string"}}, {"description": "Payment credential to query for", "in": "query", "name": "paymentCred", "required": false, "schema": {"example": "654902e0eda93d803768175c48b603d010f6a5ea4829a10e7c6f215d", "type": "string"}}]}, 
"/address/utxos":{"description" : "Get current UTxOs at an address/payment credential. Either `address` or `paymentCred` can be provided, but one must be provided.", "parameters" : [{"description": "Address to query for", "in": "query", "name": "address", "required": false, "schema": {"example": "addr1q9j5jqhqak5nmqphdqt4cj9kq0gppa49afyznggw03hjzhwxr0exydkt78th5wwrjphxh0h6rrgghzwxse6q3pdf9sxqkg2mmq", "type": "string"}}, {"description": "Payment credential to query for", "in": "query", "name": "paymentCred", "required": false, "schema": {"example": "654902e0eda93d803768175c48b603d010f6a5ea4829a10e7c6f215d", "type": "string"}}, {"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page. Maximum is `100`, default is `100`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 100, "type": "integer"}}]}, 
"/asset/supply":{"description" : "Get onchain supply for a token.", "parameters" : [{"description": "Token unit (policy + hex name) to filter by", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}]}, 
"/integration/asset":{"description" : "Returns details of a given token by its address.", "parameters" : [{"description": "Token ID", "in": "query", "name": "id", "required": true, "schema": {"example": "b46b12f0a61721a0358988f806a7c1562e1e622d5886a73194051f336d6131", "type": "string"}}]}, 
"/integration/block":{"description" : "Returns a specific block using either the number of the block or its timestamp.", "parameters" : [{"description": "Block number", "in": "query", "name": "number", "required": false, "schema": {"example": 10937538, "type": "integer"}}, {"description": "Block timestamp", "in": "query", "name": "timestamp", "required": false, "schema": {"example": 1728408176, "type": "integer"}}]}, 
"/integration/events":{"description" : "List of events occured in a range of blocks.", "parameters" : [{"description": "Block number to start filtering at (inclusive).", "in": "query", "name": "fromBlock", "required": true, "schema": {"example": 10937538, "type": "integer"}}, {"description": "Block number to end filtering at (inclusive).", "in": "query", "name": "toBlock", "required": true, "schema": {"example": 10937542, "type": "integer"}}, {"description": "Limit results to a maximum count, Defaults to `1000`, With a maximum of `1000`.", "in": "query", "name": "limit", "required": false, "schema": {"example": 1000, "type": "integer"}}]}, 
"/integration/exchange":{"description" : "Return details of a given DEX by its factory address or alternative id.", "parameters" : [{"description": "Exchange id", "in": "query", "name": "id", "required": true, "schema": {"example": "7", "type": "string"}}]}, 
"/integration/latest-block":{"description" : "Returns the latest block processed in the blockchain/DEX.", "parameters" : "endpoint has no parameters"}, 
"/integration/pair":{"description" : "Returns pair details (aka pool) by its address.", "parameters" : [{"description": "Pair ID", "in": "query", "name": "id", "required": true, "schema": {"example": "nikeswaporderbook.44759dc63605dbf88700b241ee451aa5b0334cf2b34094d836fbdf8642757a7a696542656520.ada", "type": "string"}}]}, 
"/market/stats":{"description" : "Get aggregated market stats, including 24h DEX volume and total active addresses onchain. Active addresses are addresses that have either sent or received any transactions within the last 24 hours. Multiple addresses with the same stake key will be counted as one address.", "parameters" : [{"description": "Quote currency to use (ADA, USD, EUR, ETH, BTC). Default is `ADA`.", "in": "query", "name": "quote", "required": false, "schema": {"example": "ADA", "type": "string"}}]}, 
"/metrics":{"description" : "Get the number of requests made by day over the last 30d.", "parameters" : "endpoint has no parameters"},
"/token/debt/loans":{"description" : "Get active P2P loans of a certain token (Currently only supports P2P protocols like Lenfi and Levvy).", "parameters" : [{"description": "Token unit (policy + hex name) to filter by", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "Comma seperated value enabling you to filter to loans where token is used as `collateral`, `debt`, `interest` or a mix of them, default is `collateral,debt` filtering to loans where token is used as collateral OR debt.", "in": "query", "name": "include", "required": false, "schema": {"example": "collateral,debt", "type": "string"}}, {"description": "What should the results be sorted by. Options are `time`, `expiration`. Default is `time`. `expiration` is expiration date of loan.", "in": "query", "name": "sortBy", "required": false, "schema": {"example": "time", "type": "string"}}, {"description": "Which direction should the results be sorted. Options are `asc`, `desc`. Default is `desc`.", "in": "query", "name": "order", "required": false, "schema": {"example": "desc", "type": "string"}}, {"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page, default is `100`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 100, "type": "integer"}}]}, 
"/token/debt/offers":{"description" : "Get active P2P loan offers that are not associated with any loans yet (Currently only supports P2P protocols like Lenfi and Levvy).", "parameters" : [{"description": "Token unit (policy + hex name) to filter by", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "Comma seperated value enabling you to filter to offers where token is used as `collateral`, `debt`, `interest` or a mix of them, default is `collateral,debt` filtering to offers where token is used as collateral OR debt.", "in": "query", "name": "include", "required": false, "schema": {"example": "collateral,debt", "type": "string"}}, {"description": "What should the results be sorted by. Options are `time`, `duration`. Default is `time`. `duration` is loan duration in seconds.", "in": "query", "name": "sortBy", "required": false, "schema": {"example": "time", "type": "string"}}, {"description": "Which direction should the results be sorted. Options are `asc`, `desc`. Default is `desc`.", "in": "query", "name": "order", "required": false, "schema": {"example": "desc", "type": "string"}}, {"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page, default is `100`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 100, "type": "integer"}}]}, 
"/token/holders":{"description" : "Get total number of holders for a specific token. This uses `coalesce(stake_address, address)`, so all addresses under one stake key will be aggregated into 1 holder.", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}]}, 
"/token/holders/top":{"description" : "Get top token holders.", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page. Maximum is `100`, default is `20`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 20, "type": "integer"}}]}, 
"/token/indicators":{"description" : "Get indicator values (e.g. EMA, RSI) based on price data for a specific token. There are multiple parameters that can be passed, but some only apply to certain indicators. This will return the most recent values.", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "The time interval. Options are `3m`, `5m`, `15m`, `30m`, `1h`, `2h`, `4h`, `12h`, `1d`, `3d`, `1w`, `1M`.", "in": "query", "name": "interval", "required": true, "schema": {"example": "1d", "type": "string"}}, {"description": "The number of items to return. The maximum number of items that can be returned is 1000.", "in": "query", "name": "items", "required": false, "schema": {"example": 100, "type": "integer"}}, {"description": "Specify which indicator to use. Options are `ma`, `ema`, `rsi`, `macd`, `bb`, `bbw`.", "in": "query", "name": "indicator", "required": false, "schema": {"example": "ma", "type": "string"}}, {"description": "Length of data to include. Used in `ma`, `ema`, `rsi`, `bb`, and `bbw`.", "in": "query", "name": "length", "required": false, "schema": {"example": 14, "type": "integer"}}, {"description": "Length of data to include for smoothing. Used in `ema`. Most often is set to 2.", "in": "query", "name": "smoothingFactor", "required": false, "schema": {"example": 2, "type": "integer"}}, {"description": "Length of shorter EMA to use in MACD. Only used in `macd`", "in": "query", "name": "fastLength", "required": false, "schema": {"example": 12, "type": "integer"}}, {"description": "Length of longer EMA to use in MACD. Only used in `macd`", "in": "query", "name": "slowLength", "required": false, "schema": {"example": 26, "type": "integer"}}, {"description": "Length of signal EMA to use in MACD. Only used in `macd`", "in": "query", "name": "signalLength", "required": false, "schema": {"example": 9, "type": "integer"}}, {"description": "Standard deviation multiplier to use for upper and lower bands of Bollinger Bands (typically set to 2). Used in `bb` and `bbw`.", "in": "query", "name": "stdMult", "required": false, "schema": {"example": 2, "type": "integer"}}, {"description": "Which quote currency to use when building price data (e.g. `ADA`, `USD`).", "in": "query", "name": "quote", "required": false, "schema": {"example": "ADA", "type": "string"}}]}, 
"/token/links":{"description" : "Get a specific token's social links, if they have been provided to TapTools.", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}]}, 
"/token/mcap":{"description" : "Get a specific token's supply and market cap information. We pull circulating supply information from [this repo](https://github.com/minswap/market-cap).", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}]}, 
"/token/ohlcv":{"description" : "Get a specific token's trended (`open`, `high`, `low`, `close`, `volume`) price data. You can either pass a token unit to get aggregated data across all liquidity pools, or an `onchainID` for a specific pair (see `/token/pools`).", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": false, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "Pair onchain ID to get ohlc data for", "in": "query", "name": "onchainID", "required": false, "schema": {"example": "0be55d262b29f564998ff81efe21bdc0022621c12f15af08d0f2ddb1.39b9b709ac8605fc82116a2efc308181ba297c11950f0f350001e28f0e50868b", "type": "string"}}, {"description": "The time interval. Options are `3m`, `5m`, `15m`, `30m`, `1h`, `2h`, `4h`, `12h`, `1d`, `3d`, `1w`, `1M`.", "in": "query", "name": "interval", "required": true, "schema": {"example": "1d", "type": "string"}}, {"description": "The number of intervals to return, e.g. if you want 180 days of data in 1d intervals, then pass `180` here.", "in": "query", "name": "numIntervals", "required": false, "schema": {"example": 180, "type": "integer"}}]}, 
"/token/pools":{"description" : "Get a specific token's active liquidity pools. Can search for all token pools using `unit` or can search for specific pool with `onchainID`.", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": false, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "Liquidity pool onchainID", "in": "query", "name": "onchainID", "required": false, "schema": {"example": "0be55d262b29f564998ff81efe21bdc0022621c12f15af08d0f2ddb1.39b9b709ac8605fc82116a2efc308181ba297c11950f0f350001e28f0e50868b", "type": "string"}}, {"description": "Return only ADA pools or all pools (0, 1)", "in": "query", "name": "adaOnly", "required": false, "schema": {"example": 1, "type": "integer"}}]}, 
"/token/prices":{"description" : "Get an object with token units (policy + hex name) as keys and price as values for a list of policies and hex names. These prices are aggregated across all supported DEXs. Max batch size is `100` tokens.", "parameters" : "endpoint has no parameters"}, 
"/token/prices/chg":{"description" : "Get a specific token's price percent change over various timeframes. Timeframe options include `[5m, 1h, 4h, 6h, 24h, 7d, 30d, 60d, 90d]`. All timeframes are returned by default.", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "List of timeframes", "in": "query", "name": "timeframes", "required": false, "schema": {"example": "1h,4h,24h,7d,30d", "type": "string"}}]}, 
"/token/quote":{"description" : "Get current quote price (e.g, current ADA/USD price).", "parameters" : [{"description": "Quote currency to use (USD, EUR, ETH, BTC). Default is `USD`.", "in": "query", "name": "quote", "required": false, "schema": {"example": "USD", "type": "string"}}]}, 
"/token/quote/available":{"description" : "Get all currently available quote currencies.", "parameters" : "endpoint has no parameters"}, 
"/token/top/liquidity":{"description" : "Get tokens ranked by their DEX liquidity. This includes both AMM and order book liquidity.", "parameters" : [{"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page. Maximum is `100`, default is `10`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 10, "type": "integer"}}]}, 
"/token/top/mcap":{"description" : "Get tokens with top market cap in a descending order. This endpoint does exclude deprecated tokens (e.g. MELD V1 since there was a token migration to MELD V2).", "parameters" : [{"description": "Sort tokens by circulating market cap or fully diluted value. Options `[mcap, fdv]`.", "in": "query", "name": "type", "required": false, "schema": {"example": "mcap", "type": "string"}}, {"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page. Maximum is `100`, default is `20`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 20, "type": "integer"}}]}, 
"/token/top/volume":{"description" : "Get tokens with top volume for a given timeframe.", "parameters" : [{"description": "Specify a timeframe in which to aggregate the data by. Options are `[1h, 4h, 12h, 24h, 7d, 30d, 180d, 1y, all]`. Default is `24h`.", "in": "query", "name": "timeframe", "required": false, "schema": {"example": "24h", "type": "string"}}, {"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page. Maximum is `100`, default is `20`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 20, "type": "integer"}}]}, 
"/token/trades":{"description" : "Get token trades across the entire DEX market.", "parameters" : [{"description": "The time interval. Options are `1h`, `4h`, `24h`, `7d`, `30d`, `90d`, `180d`, `1y`, `all`. Defaults to `30d`.", "in": "query", "name": "timeframe", "required": false, "schema": {"example": "30d", "type": "string"}}, {"description": "What should the results be sorted by. Options are `amount`, `time`. Default is `amount`. Filters to only ADA trades if set to `amount`.", "in": "query", "name": "sortBy", "required": false, "schema": {"example": "amount", "type": "string"}}, {"description": "Which direction should the results be sorted. Options are `asc`, `desc`. Default is `desc`.", "in": "query", "name": "order", "required": false, "schema": {"example": "desc", "type": "string"}}, {"description": "Optionally filter to a specific token by specifying a token unit (policy + hex name).", "in": "query", "name": "unit", "required": false, "schema": {"example": "279c909f348e533da5808898f87f9a14bb2c3dfbbacccd631d927a3f534e454b", "type": "string"}}, {"description": "Filter to only trades of a certain ADA amount.", "in": "query", "name": "minAmount", "required": false, "schema": {"example": 1000, "type": "integer"}}, {"description": "Filter trades using a UNIX timestamp, will only return trades after this timestamp.", "in": "query", "name": "from", "required": false, "schema": {"example": 1704759422, "type": "integer"}}, {"description": "This endpoint supports pagination. Default page is `1`.", "in": "query", "name": "page", "required": false, "schema": {"example": 1, "type": "integer"}}, {"description": "Specify how many items to return per page. Maximum is `100`, default is `10`.", "in": "query", "name": "perPage", "required": false, "schema": {"example": 10, "type": "integer"}}]}, 
"/token/trading/stats":{"description" : "Get aggregated trading stats for a particular token.", "parameters" : [{"description": "Token unit (policy + hex name)", "in": "query", "name": "unit", "required": true, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}, {"description": "Specify a timeframe in which to aggregate the data by. Options are `[15m, 1h, 4h, 12h, 24h, 7d, 30d, 90d, 180d, 1y, all]`. Default is `24h`.", "in": "query", "name": "timeframe", "required": false, "schema": {"example": "24h", "type": "string"}}]}, 
"/transaction/utxos":{"description" : "Get UTxOs from a specific transaction.", "parameters" : [{"description": "Transaction hash", "in": "query", "name": "hash", "required": false, "schema": {"example": "8be33680ec04da1cc98868699c5462fbbf6975529fb6371669fa735d2972d69b", "type": "string"}}]}, 
"/wallet/portfolio/positions":{"description" : "Get wallet's current portfolio positions with supporting market data. This includes positions that are staked in a smart contract and LP farm positions (for supported protocols)", "parameters" : [{"description": "Address to query for", "in": "query", "name": "address", "required": false, "schema": {"example": "stake1u8rphunzxm9lr4m688peqmnthmap35yt38rgvaqgsk5jcrqdr2vuc", "type": "string"}}]}, 
"/wallet/trades/tokens":{"description" : "Get the token trade history for a particular wallet. Optionally pass a token unit to filter to a specific token.", "parameters" : [{"description": "Address to query for", "in": "query", "name": "address", "required": true, "schema": {"example": "stake1u8rphunzxm9lr4m688peqmnthmap35yt38rgvaqgsk5jcrqdr2vuc", "type": "string"}}, {"description": "Token unit (policy + hex name) to filter by", "in": "query", "name": "unit", "required": false, "schema": {"example": "8fef2d34078659493ce161a6c7fba4b56afefa8535296a5743f6958741414441", "type": "string"}}]}, 
"/wallet/value/trended":{"description" : "Get historical trended value of an address in 4hr intervals. This includes the value of all tokens, NFTs, LP/farm positions, custodial staking, and assets involved in active loans (either being lent or used as collateral). **NOTE** this does not include staking rewards unless the rewards are withdrew from rewards account.", "parameters" : [{"description": "Address to query for", "in": "query", "name": "address", "required": true, "schema": {"example": "stake1u8rphunzxm9lr4m688peqmnthmap35yt38rgvaqgsk5jcrqdr2vuc", "type": "string"}}, {"description": "The time interval. Options are `24h`, `7d`, `30d`, `90d`, `180d`, `1y`, `all`. Defaults to `30d`.", "in": "query", "name": "timeframe", "required": false, "schema": {"example": "30d", "type": "string"}}, {"description": "Quote currency to use (ADA, USD, EUR, ETH, BTC). Default is `ADA`.", "in": "query", "name": "quote", "required": false, "schema": {"example": "ADA", "type": "string"}}]} 
}